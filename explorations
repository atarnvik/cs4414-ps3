Exploration 1: Benchmarking
	When benchmarking with 1000 connections:
		The average transfer response time was 1 ms more in zhttpto than in zhtta. The average connection time was also 2 ms greater. However, the total test durations were the same down to 1 millisecond (9.990 v . 9.991).

	Zhtta.txt
		Same small differences in response and connection times for files that worked.

	Clearly the newer server has better performance - and we expect this because we're using more tasks which allows for faster responses and thus frees up connections sooner.


Exploration 2: Smarter Scheduling
	1. How many tasks are running before the first request arrives?
		1 - the task that uses the TCP listener. 

	2. What are all the tasks that are involves in handling a request?
		2 total - 1 to handle the TCP listener (which is running before the first request arrives), and then 1 to actually handle the connection

	3. If a series of requests, r1, r2, ..., rn arrives in order, what can you say about the order in which the server will respond to them?
		In the order that they came in - it's a FIFO queue as described in the comments based on the methods used on the request OwnedVector...makes sense though, because it's basically like who gets in line first.